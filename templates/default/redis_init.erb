#!/bin/sh
#
# redis-<%= @name %>     Start redis-<%= @name %>
#
# chkconfig: 2345 08 92
# description:
# Simple Redis init.d script conceived to work on Linux systems
# as it does use the /proc filesystem.
#
# config: /etc/redis/<%= @name %>.conf
#
### BEGIN INIT INFO
# Provides: redis-<%= @name %>
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop redis-<%= @name %>
# Description: Start, stop redis-<%= @name %>
### END INIT INFO


REDISPORT=<%= @port %>

<% if node.redis.install_type == "source" %>
EXEC=<%= node.redis.dst_dir %>/bin/redis-server
CLIEXEC=<%= node.redis.dst_dir %>/bin/redis-cli
<% else %>
EXEC=<%= node.redis.dst_dir %>/redis-server
CLIEXEC=<%= node.redis.dst_dir %>/redis-cli
<% end %>

PIDFILE=<%= @pidfile %>
CONF="<%= @conf_dir %>/<%= @name %>.conf"

<% if node.platform_family == "debian" %>
ulimit -Hn <%= node.redis.ulimit %>
ulimit -Sn <%= node.redis.ulimit %>
<% end %>

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                <% if @pidfile == "/var/run/redis/redis.pid" %>
                mkdir -p /var/run/redis
                chown -R redis:redis /var/run/redis
                <% end %>

                <% if @logfile.downcase != "stdout" %>
                chown -R <%= @user %>:<%= @user %> <%= @logfile %>
                <% end %>
                echo "Starting Redis server..."
                sudo -u <%= @user %> $EXEC $CONF
		<% slvip = node.redis.config.slaveof_ip %>
		<% slvport = node.redis.config.slaveof_port %>
		<% if slvip != "" %>
		$CLIEXEC -p $REDISPORT slaveof <%=slvip %> <%=slvport %>
		<% end %>
        fi
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC -p $REDISPORT shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    restart)
        ${0} stop
        ${0} start
        ;;
    *)
        echo "Please use start, stop or restart as first argument"
        ;;
esac
